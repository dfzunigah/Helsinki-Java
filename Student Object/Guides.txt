EXERCISE 88.1: CLASS STUDENT
Implement class Student that holds the following information about a student:

name (String)
studentNumber (String)
The class should have the following methods:

A constructor that initializes the name and the student number with the given parameters.
getName, that returns the student name
getStudentNumber, that returns the student number
toString, that returns a String representation of the form: Pekka Mikkola (013141590)
With the following code:

public class Main {
    public static void main(String[] args) {
        Student pekka = new Student("Pekka Mikkola", "013141590");
        System.out.println("name: " + pekka.getName());
        System.out.println("studentnumber: " + pekka.getStudentNumber());
        System.out.println(pekka);
    }
}
  
The output should be:

name: Pekka Mikkola
studentnumber: 013141590
Pekka Mikkola (013141590)
  
EXERCISE 88.2: LIST OF STUDENTS
Implement a main program that works as follws:

name: Alan Turing
studentnumber: 017635727
name: Linus Torvalds
studentnumber: 011288989
name: Steve Jobs
studentnumber: 013672548
name:

Alan Turing (017635727)
Linus Torvalds (011288989)
Steve Jobs (013672548)
  
So the program asks for student information from the user until the user gives a student an empty name. After the student info has been enteres, all the students are printed. From each inputted name-studentnumber-pair, the program should create a Student object. The program should store the students in an ArrayList which is defined as follows:

ArrayList<Student> list = new ArrayList<Student>();
  
EXERCISE 88.3: SEARCH
Extend the program of the previous part so that after the student info has been entered and students printed, the user can search the student list based on a given search term. The extended program should work in the following manner:

name: Carl Gustaf Mannerheim
studentnumber: 015696234
name: Steve Jobs
studentnumber: 013672548
name: Edsger Dijkstra
studentnumber: 014662803
name:

Carl Gustaf Mannerheim (015696234)
Steve Jobs (013672548)
Edsger Dijkstra (014662803)

Give search term: st
Result:
Carl Gustaf Mannerheim (015696234)
Edsger Dijkstra (014662803)
  
TIP: in the search you should iterate (using for or while) through the student list and by using the method contains of String check if a student's name (obtained with method getName) matches the search term.